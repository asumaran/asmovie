meta {
  name: Search All
  type: http
  seq: 1
}

get {
  url: {{api_url}}/search
  body: none
  auth: none
}

params:query {
  q: batman
  ~sortBy: title
  ~sortOrder: asc
  ~page: 1
  ~limit: 10
}

docs {
  # Search Movies and Actors
  
  Search for movies and actors by query string with pagination, sorting, and filtering options.
  
  ## Query Parameters
  - `q` (required): Search query string (searches titles, descriptions, names, biographies)
  - `sortBy` (optional): Sort field - title, name, rating, releaseYear, createdAt (default: createdAt)
  - `sortOrder` (optional): Sort order - asc, desc (default: desc)
  - `page` (optional): Page number for pagination (default: 1)
  - `limit` (optional): Number of items per page - 5, 10, 15, 20 (default: 10)
  
  ## Response
  Returns a paginated response with:
  - `data`: Array of search result objects with type indicator and full details
  - `meta`: Pagination metadata (page, limit, total, totalPages, hasNext, hasPrev)
  
  ## Search Result Object
  Each result includes:
  - `type`: "movie" or "actor"
  - Common fields: id, createdAt, updatedAt
  - Movie fields: title, description, releaseYear, genre, duration, averageRating, actors[]
  - Actor fields: name, biography, birthDate, movies[]
  
  ## Example
  ```
  GET /search?q=batman
  GET /search?q=batman&sortBy=title&sortOrder=asc
  GET /search?q=batman&page=2&limit=15
  GET /search?q=batman&sortBy=rating&sortOrder=desc
  ```
}